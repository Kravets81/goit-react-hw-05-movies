{"version":3,"file":"static/js/594.172b7b20.chunk.js","mappings":"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","sources":["pages/MovieCard.jsx","services/API.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\nimport PropTypes from 'prop-types';\nimport { Suspense } from 'react';\n\nexport default function MovieCard() {\n  const [loading, setLoading] = useState(true);\n  const [movieData, setMovieData] = useState(null);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLincLocationRef = useRef(location.state?.from ?? '/');\n\n  const BASE_URL = `https://image.tmdb.org/t/p/original`;\n  const {\n    genres,\n    release_date,\n    overview,\n    popularity,\n    poster_path,\n    original_title,\n  } = movieData || {};\n\n  const posterURL = poster_path ? `${BASE_URL}${poster_path}` : '';\n  const releaseYear = new Date(`${release_date}`).getFullYear();\n  const genresMovie = genres ? genres.map(genre => [genre.name]).join(' ') : '';\n\n  useEffect(() => {\n    const fetchMovieById = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovieData(data);\n        setLoading(false);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n        setLoading(false);\n      }\n    };\n    fetchMovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {movieData && (\n        <div>\n          <NavLink to={backLincLocationRef.current}>Go back</NavLink>\n          <img\n            src={`${posterURL}`}\n            alt={original_title}\n            width={250}\n            height={'auto'}\n          />\n          <h3>\n            {original_title} ({releaseYear})\n          </h3>\n          <p>User score: {popularity}</p>\n          <h4>Overview</h4>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genresMovie}</p>\n          <h4>Additional informanion</h4>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  movieId: PropTypes.string,\n  movieData: PropTypes.shape({\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    popularity: PropTypes.number,\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n  }),\n};\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bfdc0ae9bb4cf69882d567f8453b8335';\n\nexport async function getTrandingMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    if (!response.ok) {\n      throw new Error('Ошибка при выполнении запроса!');\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n}\n\nexport async function searchMovieByQuery(searchQuery) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n    if (!response.ok) {\n      throw new Error('Ошибка при выполнении запроса!');\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    if (!response.ok) {\n      throw new Error('Ошибка при выполнении запроса!');\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (!response.ok) {\n      throw new Error('Ошибка при выполнении запроса!');\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (!response.ok) {\n      throw new Error('Ошибка при выполнении запроса!');\n    }\n    const data = await response.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieCard","useState","loading","setLoading","movieData","setMovieData","error","setError","movieId","useParams","location","useLocation","backLincLocationRef","useRef","state","from","genres","release_date","overview","popularity","poster_path","original_title","posterURL","releaseYear","Date","getFullYear","genresMovie","map","genre","name","join","useEffect","fetchMovieById","getMovieDetails","data","to","current","src","alt","width","height","Suspense","fallback","BASE_URL","API_KEY","getTrandingMovies","fetch","response","ok","Error","json","console","searchMovieByQuery","searchQuery","getMovieCredits","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}